Протокол работы сервера для игр:

Клиенты подключаются по адресу localhost:10001, должны себя идентифицировать первой командой, указав имя игрока, и игру.
Далее сервер выбирает случайным образом пару игроков для игры - если таковые существуют, и инициирует игру между ними, выбирая случайно очередность хода.
Тут самый большой вопрос - а кто, собственно, и как часто инициирует поиск соперника.

Общение между клиентами происходит посредством строковых команд.

Протокол:
Сообщения передаются в текстовом виде, сначала идёт команда - до %, только латинские буквы
В своих сообщениях, какие бы они не были, нельзя использовать символ %

Команды:
Login%BotName%Game (клиент) 
	BotName - имя игрока (ну или бота), под которым его видно на сервере. Как напишите, тому баллы и будут начислены (ну, при условии наличия такой персоны в БРС)
	Game - одно из следующих
	  Infection
	  FourInRow
	  Reversi
	  Gomoku
	  Corners
	  NineMensMorris
	  WolfsAndSheeps

	  ответ сервера: Accepted или Rejected#причина отказа

Logout - отключение от сервера, отправляется клиентом, надоело играть. Также отсылается сервером в том случае, если клиент запросил апелляцию.

StartFirst и StartSecond (сервер клиенту) - начать игру, StartFirst - клиент ходит первым, StartSecond - ждём первого хода противника

Move%<сделанный ход> (клиент серверу или сервер клиенту) - сделать ход. Если такую команду получает клиент, то необходимо отреагировать - сделать ход

PassMove - пропуск хода (в обе стороны)

StopGame - принудительное завершение текущей игры (всё, почему-то игра закончилась). Эту команду клиент не должен отсылать сам!

RequestField (сервер клиенту) - запрос поля (текущей конфигурации)

Field%<сохранённое в виде строки представление поля> - отправка текущего состояния поля

Все приведённые ниже сообщения заканчивают текущую партию:
Эти сообщения могут быть как отправлены клиентом, так и получены. В случае получения такого сообщения игра завершается, но можно потребовать апелляции.
WinGame - если отсылает клиент, то он объявляет о выигрыше. Если получаем такую команду - значит, мы проиграли
FailGame - аналогично, поражение
DrawGame - ничья, констатация ничьей
Objection - апелляция. Сохранение в файл логов игры, и рассмотрение судейской коллегией.

FindOpponent - запрос на поиск соперника для игры. В данной версии игнорируется.
BadRequest - неправильно сформированное сообщения для сервера. Отправляет сервер в случае, если не смог распознать команду
LogicError - логическая ошибка (например, попытка сделать ход в том случае, если игра не инициализирована)
Info - информация от сервера
Score - информация о текущем счёте игрока